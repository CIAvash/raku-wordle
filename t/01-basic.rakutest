use Test;
use Games::Wordle;

my Games::Wordle $wordle.=new(:answer<camel>);

for (
	:mommy<â¬œ â¬œ ğŸŸ© â¬œ â¬œ>,
	:music<ğŸŸ¨ â¬œ â¬œ â¬œ ğŸŸ¨>,
	:chime<ğŸŸ© â¬œ â¬œ ğŸŸ¨ ğŸŸ¨>,
	:claim<ğŸŸ© ğŸŸ¨ ğŸŸ¨ â¬œ ğŸŸ¨>,
) {
	is-deeply $wordle.guess(.key), .value, "ï½¢$_.key()ï½£ gives correct tiles";
	is-deeply $wordle.result, Nil, 'No result for unfinished game';
}

is-deeply $wordle.guess('camel'), <ğŸŸ© ğŸŸ© ğŸŸ© ğŸŸ© ğŸŸ©>, 'correct guess gives correct tiles';
is-deeply $wordle.result, q:to/END/.trim, 'result prints correctly for completed game';
Wordle # 5/6
â¬œâ¬œğŸŸ©â¬œâ¬œ
ğŸŸ¨â¬œâ¬œâ¬œğŸŸ¨
ğŸŸ©â¬œâ¬œğŸŸ¨ğŸŸ¨
ğŸŸ©ğŸŸ¨ğŸŸ¨â¬œğŸŸ¨
ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©
END

$wordle.=new(:number<0>, :guess-limit<1>);
$wordle.guess('camel');

is $wordle.answer, 'CIGAR';
is-deeply $wordle.result, q:to/END/.trim, 'Specified number and guess limit gives correct game and result';
Wordle 0 X/1
ğŸŸ©ğŸŸ¨â¬œâ¬œâ¬œ
END

done-testing;
